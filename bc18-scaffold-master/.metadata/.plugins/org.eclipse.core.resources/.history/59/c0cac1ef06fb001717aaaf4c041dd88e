import java.util.ArrayList;

import bc.*;

public class CombatManeuver {

	/**
	 * Method that returns the best target to attack within the attackable units.
	 * @return Best possible unit to attack, false otherwise.
	 */
	public Unit targetSelection(GameController gc, Unit unit, Team enemyTeam){
		
		EnemyLocations enemies = new EnemyLocations(gc, enemyTeam);
		
		ArrayList<Unit> possibleTargets = enemies.canAttack(gc, unit);
		ArrayList<Unit> withinRangeOf = enemies.isWithinAttackRange(unit);
		
		// Check that this Unit can attack another Unit
		if(possibleTargets.isEmpty() == false){
			
			// First attack units that can attack the current Unit.
			for (Unit u : withinRangeOf){
				if (possibleTargets.contains(u) && gc.canAttack(unit.id(), u.id())){
					return u;
				}
			}
			
			// Then attack other combat units.
			for (Unit u: possibleTargets){
				if (u.unitType() == UnitType.Knight || u.unitType() == UnitType.Mage || u.unitType() == UnitType.Ranger || gc.canAttack(unit.id(), u.id())){
					return u;
				}
			}
			
			// Attack any possible targets.
			for (Unit u: possibleTargets){
				if (gc.canAttack(unit.id(), u.id())){
					return u;
				}
			}
	
		}
		
		return null;
	}
	
	
}
